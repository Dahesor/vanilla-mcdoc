use ::java::server::world::item::ItemStack
use ::java::data::advancement::predicate::ItemPredicate

struct ContainerSlot {
	/// The slot ID of the container.
	slot: int @ 0..255,
	/// The item stack in this container slot.
	item: ItemStack,
}

dispatch minecraft:data_component[container] to [ContainerSlot] @ ..256

dispatch minecraft:data_component[container_loot] to struct ContainerLoot {
	loot_table: #[id="loot_table"] string,
	seed?: long,
}

dispatch minecraft:data_component[lock] to (
	#[until="1.21.2"] string |
	#[since="1.21.2"] ItemPredicate |
)

dispatch minecraft:item_component[
	barrel,
	chest,
	trapped_chest,
	shulker_box,
	white_shulker_box,
	orange_shulker_box,
	magenta_shulker_box,
	light_blue_shulker_box,
	yellow_shulker_box,
	lime_shulker_box,
	pink_shulker_box,
	gray_shulker_box,
	light_gray_shulker_box,
	cyan_shulker_box,
	purple_shulker_box,
	blue_shulker_box,
	brown_shulker_box,
	green_shulker_box,
	red_shulker_box,
	black_shulker_box,
] to (
	super::BlockItemComponents |
	"container" |
	"container_loot" |
	"lock" |
)

dispatch minecraft:item_component[dispenser, dropper] to (
	super::BlockItemComponents |
	"container" |
)
