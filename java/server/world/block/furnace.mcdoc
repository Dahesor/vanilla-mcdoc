use ::java::server::util::inventory::SlottedItem

dispatch minecraft:block_entity[furnace, blast_furnace, smoker] to struct Furnace {
	...super::BlockEntity,
	CustomName?: #[text_component] string,
	...super::Lockable,
	/// The items in this furnace, with slots:
	/// * 0: Item being smelted
	/// * 1: Fuel
	/// * 2: Output
	Items?: [SlottedItem<byte @ 0..2>] @ 0..3,
	#[until="1.21.4"] ...struct {
		/// Ticks until the fuel runs out.
		BurnTime?: short,
		/// Ticks the item has been smelting for.
		CookTime?: short,
		/// Ticks the item will take to be smelted.
		CookTimeTotal?: short,
	},
	#[since="1.21.4"] ...struct {
		/// Ticks the item will take to be smelted.
		cooking_total_time?: short,
		/// Ticks the item has been smelting for.
		cooking_time_spent?: short,
		/// Ticks until the fuel runs out.
		lit_time_remaining?: short,
		/// Ticks the fuel has been burning for.
		lit_total_time?: short,
	},
	/// Recipes that have been used since the last time a result item was removed from the GUI. Used to calculate the experience to give to the player.
	#[since="1.16"]
	RecipesUsed?: struct RecipesUsed {
		/// How many times this recipe has been used.
		[#[id="recipe"] string]: int,
	},
}

dispatch minecraft:block[furnace, blast_furnace, smoker] to minecraft:block_entity[furnace]
