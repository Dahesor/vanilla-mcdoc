use ::java::server::util::global_pos::GlobalPos

struct MemoryModule {
	/// The amount of ticks before this memory is removed
	#[since=1.16]
	ttl: long,
}

dispatch minecraft:memory_module[
	home,
	job_site,
	meeting_point,
] to struct PositionMemory {
	...MemoryModule,
	/// The position value
	value: GlobalPos,
}

#[since=1.16]
dispatch minecraft:memory_module[potential_job_site] to PositionMemory

struct GlobalPos {
	/// The coordinates of the location in [x, y, z]
	pos: int[] @ 3,
	/// The dimension of the location
	dimension: #[id=dimension] string,
}

dispatch minecraft:memory_module[
	last_slept,
	last_woken,
	last_worked_at_poi,
] to struct TickMemory {
	...MemoryModule,
	/// The tick value
	value: long,
}

#[since=1.17]
dispatch minecraft:memory_module[
	long_jump_cooling_down,
	play_dead_ticks,
	ram_cooldown_ticks,
	temptation_cooldown_ticks,
] to TickMemory

#[since=1.16]
dispatch minecraft:memory_module[angry_at] to struct UuidMemory {
	...MemoryModule,
	/// The uuid value
	value: int[] @ 4,
}

#[since=1.16]
dispatch minecraft:memory_module[
	admiring_disabled,
	admiring_item,
	golem_detected_recently,
	hunted_recently,
	universal_anger,
] to struct BooleanMemory {
	...MemoryModule,
	/// The boolean value
	value: boolean,
}

#[since=1.17]
dispatch minecraft:memory_module[is_tempted] to BooleanMemory

#[since=1.17]
dispatch minecraft:memory_module[has_hunting_cooldown] to BooleanMemory
