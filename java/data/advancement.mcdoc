use ::java::server::world::item::ItemBase
use ::java::server::util::text::Text
use super::predicates::MinMaxBounds
use super::predicates::ItemPredicate
use super::predicates::EntityPredicate
use super::predicates::MobEffectPredicate
use super::predicates::DamagePredicate
use super::predicates::DamageSourcePredicate
use super::predicates::LocationPredicate
use super::predicates::DistancePredicate

struct Advancement {
	display?: Display,
	parent?: #[id=advancement] string,
	criteria: struct {
		[string]: Criterion,
	},
	requirements?: [[string]], // TODO
	rewards?: Rewards
}

struct Display {
	icon: struct {
		item: #[id=item] string,
		nbt?: #[parser=nbt(ItemBase)] string, // TODO
	},
	title: Text,
	description: Text,
	background?: string, // TODO
	frame?: FrameType,
	show_toast?: boolean,
	announce_to_chat?: boolean,
	hidden?: boolean,
}

enum(string) FrameType {
	Task = "task",
	Challenge = "challenge",
	Goal = "goal",
}

struct Rewards {
	function?: #[id=function] string,
	loot?: [#[id=loot_table] string],
	recipes?: [#[id=recipe] string],
	experience?: int,
}

struct Criterion {
	trigger: #[id] Trigger,
	conditions?: minecraft:criteria_trigger[[trigger]],
}

enum(string) Trigger {
	BeeNestDestroyed = "bee_nest_destroyed",
	BredAnimals = "bred_animals",
	BrewedPotion = "brewed_potion",
	ChangedDimension = "changed_dimension",
	ChanneledLightning = "channeled_lightning",
	ConstructBeacon = "construct_beacon",
	ConsumeItem = "consume_item",
	CuredZombieVillager = "cured_zombie_villager",
	EffectsChanged = "effects_changed",
	EnchantedItem = "enchanted_item",
	EnterBlock = "enter_block",
	EntityHurtPlayer = "entity_hurt_player",
	EntityKilledPlayer = "entity_killed_player",
	FilledBucket = "filled_bucket",
	FishingRodHooked = "fishing_rod_hooked",
	HeroOfTheVillage = "hero_of_the_village",
	Impossible = "impossible",
	InventoryChanged = "inventory_changed",
	ItemDurabilityChanged = "item_durability_changed",
	KilledByCrossbow = "killed_by_crossbow",
	Levitation = "levitation",
	Location = "location",
	NetherTravel = "nether_travel",
	PlacedBlock = "placed_block",
	PlayerHurtEntity = "player_hurt_entity",
	PlayerKilledEntity = "player_killed_entity",
	RecipeUnlocked = "recipe_unlocked",
	ShotCrossbow = "shot_crossbow",
	SafelyHarvestHoney = "safely_harvest_honey",
	SleptInBed = "slept_in_bed",
	SlideDownBlock = "slide_down_block",
	SummonedEntity = "summoned_entity",
	TameAnimal = "tame_animal",
	Tick = "tick",
	UsedEnderEye = "used_ender_eye",
	UsedTotem = "used_totem",
	VillagerTrade = "villager_trade",
	VoluntaryExile = "voluntary_exile"
}

dispatch minecraft:criteria_trigger[bee_nest_destroyed] to struct {
	block?: #[id=block] string,
	num_bees_inside?: int,
	item?: ItemPredicate,
}

dispatch minecraft:criteria_trigger[bred_animals] to struct {
	parent?: EntityPredicate,
	partner?: EntityPredicate,
	child?: EntityPredicate,
}

dispatch minecraft:criteria_trigger[brewed_potion] to struct {
	potion?: #[id=potion] string,
}

dispatch minecraft:criteria_trigger[changed_dimension] to struct {
	from?: #[id=dimension],
	to?: #[id=dimension],
}

dispatch minecraft:criteria_trigger[channeled_lightning] to struct {
	victims?: [EntityPredicate],
}

dispatch minecraft:criteria_trigger[construct_beacon] to struct {
	level?: MinMaxBounds<int>,
}

dispatch minecraft:criteria_trigger[consume_item] to struct {
	item?: ItemPredicate,
}

dispatch minecraft:criteria_trigger[cured_zombie_villager] to struct {
	villager?: EntityPredicate,
	zombie?: EntityPredicate,
}

dispatch minecraft:criteria_trigger[effects_changed] to struct {
	effects?: struct {
		[#[id=mob_effect] string]: MobEffectPredicate,
	},
}

dispatch minecraft:criteria_trigger[enchanted_item] to struct {
	item?: ItemPredicate,
	levels?: MinMaxBounds<int>,
}

dispatch minecraft:criteria_trigger[enter_block] to struct {
	block?: #[id=block] string,
	state?: struct {
		[string]: string, // TODO
	},
}

dispatch minecraft:criteria_trigger[entity_hurt_player] to struct {
	damage?: DamagePredicate,
}

dispatch minecraft:criteria_trigger[entity_killed_player] to struct {
	entity?: EntityPredicate,
	killing_blow?: DamageSourcePredicate,
}

dispatch minecraft:criteria_trigger[filled_bucket] to struct {
	item?: ItemPredicate,
}

dispatch minecraft:criteria_trigger[fishing_rod_hooked] to struct {
	entity?: EntityPredicate,
	item?: ItemPredicate,
}

dispatch minecraft:criteria_trigger[hero_of_the_village] to LocationPredicate

dispatch minecraft:criteria_trigger[inventory_changed] to struct {
	slots?: struct {
		empty?: MinMaxBounds<int>,
		occupied?: MinMaxBounds<int>,
		full?: MinMaxBounds<int>,
	},
	items?: [ItemPredicate],
}

dispatch minecraft:criteria_trigger[item_durability_changed] to struct {
	delta?: MinMaxBounds<int>,
	durability?: MinMaxBounds<int>,
	item?: ItemPredicate,
}

dispatch minecraft:criteria_trigger[killed_by_crossbow] to struct {
	unique_entity_types?: MinMaxBounds<int>,
	victims?: [EntityPredicate],
}

dispatch minecraft:criteria_trigger[levitation] to struct {
	distance?: DistancePredicate,
	duration?: MinMaxBounds<int>,
}

dispatch minecraft:criteria_trigger[location] to LocationPredicate

dispatch minecraft:criteria_trigger[nether_travel] to struct {
	distance?: DistancePredicate,
	entered?: LocationPredicate,
	exited?: LocationPredicate,
}

dispatch minecraft:criteria_trigger[placed_block] to struct {
	block?: #[id=block] string,
	state?: struct {
		[string]: string, // TODO
	},
	item?: ItemPredicate,
	location?: LocationPredicate,
}

dispatch minecraft:criteria_trigger[player_hurt_entity] to struct {
	damage?: DamagePredicate,
	entity?: EntityPredicate,
}

dispatch minecraft:criteria_trigger[player_killed_entity] to struct {
	entity?: EntityPredicate,
	killing_blow?: DamageSourcePredicate,
}

dispatch minecraft:criteria_trigger[recipe_unlocked] to struct {
	recipe: #[id=recipe] string,
}

dispatch minecraft:criteria_trigger[shot_crossbow] to struct {
	item?: ItemPredicate,
}

dispatch minecraft:criteria_trigger[safely_harvest_honey] to struct {
	block?: struct {
		block?: #[id=block] string,
		tag?: #[id(registry=block,tags=implicit)] string,
	},
	item?: ItemPredicate,
}

dispatch minecraft:criteria_trigger[slept_in_bed] to LocationPredicate

dispatch minecraft:criteria_trigger[slide_down_block] to struct {
	block?: #[id=block] string,
}

dispatch minecraft:criteria_trigger[summoned_entity] to struct {
	entity?: EntityPredicate,
}

dispatch minecraft:criteria_trigger[tame_animal] to struct {
	entity?: EntityPredicate,
}

dispatch minecraft:criteria_trigger[used_ender_eye] to struct {
	distance?: MinMaxBounds<float>,
}

dispatch minecraft:criteria_trigger[used_totem] to struct {
	item?: ItemPredicate,
}

dispatch minecraft:criteria_trigger[villager_trade] to struct {
	villager?: EntityPredicate,
	item?: ItemPredicate,
}

dispatch minecraft:criteria_trigger[voluntary_exile] to LocationPredicate
