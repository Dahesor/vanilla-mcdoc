use ::java::server::util::text::Text

#[since="1.19.4"]
struct DamageType {
	/// The message id used for deaths caused by this damage type.
	/// Is combined with the result of `death_message_type` to form a translation key.
	message_id: string
	/// The amount of hunger exhaustion caused by this damage type.
	exhaustion: float @ 0..,
	/// Whether this damage type scales with difficulty levels.
	scaling: enum(string) {
		/// Damage is always the same.
		Never = "never",
		/// Damage always scales with difficulty
		Always = "always",
		/// Damage scales with difficulty if it was caused by a living entity who is not a player.
		LivingNonPlayer = "when_caused_by_living_non_player",
	},
	/// Optional. Controls how damage manifests when inflicted on players. Defaults to `hurt`.
	effects?: enum(string) {
		/// The default hurt sound.
		Hurt = "hurt",
		/// Thorns hurt sound.
		Thorns = "thorns",
		/// Drowing sound.
		Drowning = "drowning",
		/// A single tick of burning hurt sound.
		Burning = "burning",
		/// Berry bush poke sound.
		Poking = "poking",
		/// A single tick of freezing hurt sound.
		Freezing = "freezing"
	},
	/// Optional. Controls if special death message variants are used. Defaults to `default`.
	death_message_type?: enum(string) {
		/// Resulting translation key of `death.attack.` + message_id.
		Default = "default",
		/// Resulting translation key of `death.attack.` + message_id.
		FallVariants = "fall_variants",
		/// Resulting translation key of `death.attack.` + message_id + `.link`.
		IntentionalGameDesign = "intentional_game_design",
	}
}
