use ::java::server::util::direction::Direction

type ModelRef = #[id(registry="model",exclude=["builtin/generated","builtin/entity"])] string

dispatch minecraft:resource[model] to struct Model {
	parent?: #[id="model"] string,
	ambientocclusion?: boolean,
	gui_light?: ("front" | "side"),
	textures?: struct ModelTextures {
		[#[model_texture(definition=true)] string]: #[id="texture"] string, // TODO allow texture references
	},
	particle?: #[id="texture"] string, // TODO allow texture references
	elements?: [ModelElement],
	display?: struct ModelDisplay {
		[ItemTransformType]: struct ItemTransform {
			rotation?: [float] @ 3,
			translation?: [float @ -80..80] @ 3,
			scale?: [float @ -4..4] @ 3,
		},
	},
	#[until="1.21.4"]
	overrides?: [struct ModelOverride {
		predicate: struct ModelOverridePredicates {
			[Predicates]: float,
		},
		model: ModelRef,
	}],
}

struct ModelElement {
	from: [float @ -16..32] @ 3,
	to: [float @ -16..32] @ 3,
	faces: struct ModelElementFaceMap {
		[Direction]: struct ModelElementFace {
			texture: #[model_texture] string,
			uv?: [float] @ 4,
			cullface?: Direction,
			rotation?: (0 | 90 | 180 | 270),
			tintindex?: int,
		},
	},
	rotation?: struct ModelElementRotation {
		origin: [float] @ 3,
		axis: Axis,
		angle: (-45.0 | -22.5 | 0.0 | 22.5 | 45.0),
		/// Defaults to `false`.
		rescale?: boolean,
	},
	shade?: boolean,
}

enum(string) Axis {
	X = "x",
	Y = "y",
	Z = "z",
}

enum(string) ItemTransformType {
	FirstPersonRighthand = "firstperson_righthand",
	FirstPersonLefthand = "firstperson_lefthand",
	ThirdPersonRighthand = "thirdperson_righthand",
	ThirdPersonLefthand = "thirdperson_lefthand",
	Gui = "gui",
	Head = "head",
	Ground = "ground",
	Fixed = "fixed",
}

enum(string) Predicates {
	Angle = "angle",
	Blocking = "blocking",
	Broken = "broken",
	Cast = "cast",
	Charged = "charged",
	Cooldown = "cooldown",
	CustomModelData = "custom_model_data",
	Damage = "damage",
	Damaged = "damaged",
	Firework = "firework",
	HoneyLevel = "honey_level",
	Lefthanded = "lefthanded",
	Pull = "pull",
	Pulling = "pulling",
	Throwing = "throwing",
	Time = "time",
	TrimType = "trim_type",
}
